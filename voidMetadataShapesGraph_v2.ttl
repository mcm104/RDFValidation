@prefix bf: <http://id.loc.gov/ontologies/bibframe/> .
@prefix dct: <http://purl.org/dc/terms/> .
@prefix ex: <http://www.example.org#> .
@prefix foaf:  <http://xmlns.com/foaf/0.1/> .
@prefix format: <http://www.w3.org/ns/formats/> .
@prefix ldproc: <https://doi.org/10.6069/uwlib.55.b.2#> .
@prefix owl: <http://www.w3.org/2002/07/owl#> .
@prefix rdaclass: <http://rdaregistry.info/Elements/c/> .
@prefix rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> .
@prefix rdfs: <http://www.w3.org/2000/01/rdf-schema#> .
@prefix sh: <http://www.w3.org/ns/shacl#> .
@prefix skos: <http://www.w3.org/2004/02/skos/core#> .
@prefix uwrda: <https://doi.org/10.6069/uwlib.55.d.4#> .
@prefix void: <http://rdfs.org/ns/void#> .
@prefix wv: <https://vocab.org/waiver/> .
@prefix xsd: <http://www.w3.org/2001/XMLSchema#> .

ex:voidMetadataDescriptionShape
    a sh:NodeShape ;
    sh:property
        ex:titleShape
            [ sh:name "Title"@en ;
              sh:description "This is the title of the VoID file, not the dataset being described."@en ] ,
        ex:topicShape
            [ sh:name "Topic"@en ;
              sh:description "Use foaf:primaryTopic if the VoID file describes a single dataset; use foaf:topic if it describes several datasets of equal importance."@en ] ,
        ex:creatorShape
            [ sh:name "Creator"@en ;
              sh:description "This is the creator of the VoID file, not the dataset being described."@en ] ,
        ex:creationShape
            [ sh:name "Date of Creation"@en ;
              sh:description "This is the creation date of the VoID file, not the dataset being described."@en ] ;
    sh:targetClass void:DataDescription .

ex:generalDatasetMetadataShape
    a sh:NodeShape ;
    sh:property
        ex:contributorShape
            [ sh:name "Contributor"@en ] ,
        ex:creationShape
            [ sh:name "Date of Creation"@en ] ,
        ex:creatorShape
            [ sh:name "Creator"@en ] ,
        ex:dateShape
            [ sh:name "Relevant Date"@en ;
              sh:description "A point or period of time associated with an event in the life-cycle of the resource."@en ] ,
        ex:descriptionShape
            [ sh:name "Description"@en ] ,
        ex:featureShape
            [ sh:name "Feature"@en ] ,
        ex:homepageShape
            [ sh:name "Homepage"@en ;
              sh:description "Use for the homepage for the dataset. Do not use for related pages that are not specifically about the dataset."@en ] ,
        ex:issuedShape
            [ sh:name "Date Issued"@en ] ,
        ex:licenseShape
            [ sh:name "License"@en ] ,
        ex:normsShape
            [ sh:name "Norms"@en ;
              sh:description "Represent the general principles or "code of conduct" adopted by a community for access and use of resources."@en ] ,
        ex:pageShape
            [ sh:name "Other Pages"@en ;
              sh:description "Use for pages related to the dataset."@en ] ,
        ex:publisherShape
            [ sh:name "Publisher"@en ] ,
        ex:sourceShape
            [ sh:name "Source"@en ;
              sh:description "A related resource from which the dataset is derived."@en ] ,
        ex:subjectShape
            [ sh:name "Subject"@en ] ,
        ex:titleShape
            [ sh:name "Title"@en ] ,
        ex:waiverShape
            [ sh:name "Waiver"@en ;
              sh:description "Best practice is use the URI of a waiver legal document as the value of this property."@en ] ;
    sh:targetClass void:Dataset .

ex:accessMetadataShape
    a sh:NodeShape ;
    sh:property
        ex:dataDumpShape
            [ sh:name "Data Dump"@en ] ,
        ex:openSearchDescriptionShape
            [ sh:name "Open Search Description"@en ] ,
        ex:rootResourceShape
            [ sh:name "Root Resource"@en ;
            sh:description "Names particularly important or central resources that make good entry points for navigating the dataset."@en ] ,
        ex:sparqlEndpointShape
            [ sh:name "SPARQL Endpoint"@en ] ,
        ex:uriLookupEndpointShape
            [ sh:name "URI Lookup Endpoint"@en ] ;
    sh:targetClass void:Dataset .

ex:structuralMetadataShape
    a sh:NodeShape ;
    sh:name "Structural Metadata"@en ;
    sh:description "Provides high-level information about the schema and internal structure of a dataset."@en ;
    sh:property
        ex:exampleResourceShape
            [ sh:name "Example Resource"@en ;
              sh:description "Names particularly representative or typical resources in the dataset."@en ] ,
        ex:inDatasetShape
            [ sh:name "In Dataset"@en ;
              sh:description "W3C recommends only one void:inDataset, but it is not required."@en ] ,
        ex:partitionShape
            [ sh:name "Class/Property Partition"@en ] ,
        ex:subsetShape
            [ sh:name "Subset"@en ] ,
        ex:uriRegexPatternShape
            [ sh:name "URI Regex Pattern"@en ] ,
        ex:uriSpaceShape
            [ sh:name "URI Space"@en ] ,
        ex:vocabularyShape
            [ sh:name "Vocabulary"@en ] ;
    sh:targetClass void:Dataset .

ex:datasetStatisticsShape
    a sh:NodeShape ;
    sh:property
        ex:classesShape
            [ sh:name "Number of Classes"@en ;
              sh:description "The total number of distinct classes in the dataset."@en ] ,
        ex:distinctObjectsShape
            [ sh:name "Number of Distinct Objects"@en ;
              sh:description "The total number of distinct objects in the dataset."@en ],
        ex:distinctSubjectsShape
            [ sh:name "Number of Distinct Subjects"@en ;
              sh:description "The total number of distinct subjects in the dataset."@en ] ,
        ex:documentsShape
            [ sh:name "Number of Documents"@en ;
              sh:description "If the dataset is published as a set of individual documents, such as RDF/XML documents or RDFa-annotated web pages, then this property indicates the total number of such documents. Non-RDF documents, such as web pages in HTML or images, are usually not included in this count. This property is intended for datasets where the total number of triples or entities is hard to determine."@en ] ;
        ex:entitiesShape
            [ sh:name "Number of Entities"@en ;
              sh:description "The total number of entities that are described in the dataset."@en ] ,
        ex:propertiesShape
            [ sh:name "Number of Properties"@en ;
              sh:description "The total number of distinct properties in the dataset."@en ] ,
        ex:triplesShape
            [ sh:name "Number of Triples"@en ;
              sh:description "The total number of triples contained in the dataset."@en ].
    sh:targetClass void:Dataset .

ex:linksetShape
    a sh:NodeShape ;
    sh:property
        ex:linkPredicateShape
            [sh:name "Link Predicate"@en ] ,
        ex:objectsTargetShape
            [ sh:name "Objects Target"@en ;
              sh:description "Names the objects of all link triples in the dataset."@en ] ,
        ex:subjectsTargetShape
            [ sh:name "Subjects Target"@en ;
              sh:description "Names the subjects of all link triples in the dataset."@en ] ,
        ex:subsetShape
            [ sh:name "Subset"@en ;
              sh:description "Used to state that a linkset is part of a larger dataset."@en ] ,
        ex:targetShape
            [ sh:name "Target"@en ] ;
    sh:targetClass void:Linkset .

ex:classShape
    a sh:PropertyShape ;
    sh:path void:class ;
    sh:class rdfs:Class .

ex:classesShape
    a sh:PropertyShape ;
    sh:path void:classes ;
    sh:datatype xsd:integer .

ex:contributorShape
    a sh:PropertyShape ;
    sh:path dct:contributor ;
    sh:nodeKind sh:IRI .

ex:creationShape
    a sh:PropertyShape ;
    sh:path dct:created ;
    sh:or (
      [sh:datatype xsd:date]
      [sh:datatype xsd:gYear]
    ) ;
    sh:maxCount 1 .

ex:creatorShape
    a sh:PropertyShape ;
    sh:path dct:creator ;
    sh:nodeKind sh:IRIOrLiteral ;
    sh:minCount 1 .

ex:dataDumpShape
    a sh:PropertyShape ;
    sh:path void:dataDump ;
    sh:nodeKind sh:IRI ;
    sh:class rdfs:Resource .

ex:dateShape
    a sh:PropertyShape ;
    sh:path dct:date ;
    sh:or (
      [sh:datatype xsd:date]
      [sh:datatype xsd:gYear]
    ) .

ex:descriptionShape
    a sh:PropertyShape ;
    sh:path dct:description ;
    sh:nodeKind sh:Literal ;
    sh:uniqueLang true ;
    sh:minCount 1 .

ex:distinctObjectsShape
    a sh:PropertyShape ;
    sh:path void:distinctObjects ;
    sh:datatype xsd:integer .

ex:distinctSubjectsShape
    a sh:PropertyShape ;
    sh:path void:distinctSubjects ;
    sh:datatype xsd:integer .

ex:documentsShape
    a sh:PropertyShape ;
    sh:path void:documents ;
    sh:datatype xsd:integer .

ex:entitiesShape
    a sh:PropertyShape ;
    sh:path void:entities ;
    sh:datatype xsd:integer .

ex:exampleResourceShape
    a sh:PropertyShape ;
    sh:path void:exampleResource ;
    sh:nodeKind sh:IRI ;
    sh:datatype rdfs:Resource .

ex:featureShape
    a sh:PropertyShape ;
    sh:path void:feature ;
    sh:in (
      format:N3
      format:N-Triples
      format:RDF_XML
      format:RDFa
      format:Turtle
    ) .

ex:homepageShape
    a sh:PropertyShape ;
    sh:path foaf:homepage ;
    sh:nodeKind sh:IRI ;
    sh:maxCount 1 .

ex:inDatasetShape
    a sh:PropertyShape ;
    sh:path void:inDataset ;
    sh:nodeKind sh:IRI ;
    sh:class void:Dataset ;
    sh:maxCount 1 .

ex:issuedShape
    a sh:PropertyShape ;
    sh:path dct:issued ;
    sh:or (
      [sh:datatype xsd:date]
      [sh:datatype xsd:gYear]
    ) .

ex:licenseShape
    a sh:PropertyShape ;
    sh:path dct:license ;
    sh:nodeKind sh:IRI .

ex:linkPredicate
    a sh:PropertyShape ;
    sh:path void:linkPredicate ;
    sh:nodeKind sh:IRI ;
    sh:class rdf:Property .

ex:normsShape
    a sh:PropertyShape ;
    sh:path wv:norms ;
    sh:nodeKind sh:IRI .

ex:objectsTargetShape
    a sh:PropertyShape ;
    sh:path void:objectsTarget ;
    sh:class void:Dataset ;
    sh:maxCount 1 .

ex:openSearchDescriptionShape
    a sh:PropertyShape  ;
    sh:path void:openSearchDescription ;
    sh:nodeKind sh:IRI ;
    sh:class foaf:Document .

ex:pageShape
    a sh:PropertyShape ;
    sh:path foaf:page ;
    sh:nodeKind sh:IRI .

ex:partitionShape
    a sh:PropertyShape ;
    sh:path void:classPartition , void:propertyPartition ;
    sh:nodeKind sh:BlankNode ;
    sh:node ex:datasetStatisticsShape .

ex:propertiesShape
    a sh:PropertyShape ;
    sh:path void:properties ;
    sh:datatype xsd:integer .

ex:propertyShape
    a sh:PropertyShape ;
    sh:path void:property ;
    sh:class rdf:Property .

ex:publisherShape
    a sh:PropertyShape ;
    sh:path dct:publisher ;
    sh:nodeKind sh:IRI .

ex:rootResourceShape
    a sh:PropertyShape ;
    sh:path void:rootResource ;
    sh:nodeKind sh:IRI .

ex:sourceShape
    a sh:PropertyShape ;
    sh:path dct:source ;
    sh:nodeKind sh:IRI .

ex:sparqlEndpointShape
    a sh:PropertyShape ;
    sh:path void:sparqlEndpoint ;
    sh:nodeKind sh:IRI .

ex:subjectShape
    a sh:PropertyShape ;
    sh:path dct:subject ;
    sh:nodeKind sh:IRI .

ex:subjectsTargetShape
    a sh:PropertyShape ;
    sh:path void:subjectsTarget ;
    sh:maxCount 1 ;
    sh:class void:Dataset .

ex:subsetShape
    a sh:PropertyShape ;
    sh:path void:subset ;
    sh:nodeKind sh:IRI ;
    sh:class void:Dataset .

ex:targetShape
    a sh:PropertyShape ;
    sh:path void:target ;
    sh:nodeKind sh:IRI ;
    sh:class void:Dataset ;
    sh:minCount 2 ;
    sh:maxCount 2 .

ex:titleShape
    a sh:PropertyShape ;
    sh:path dct:title ;
    sh:nodeKind sh:Literal ;
    sh:datatype rdf:langString ;
    sh:uniqueLang true ;
    sh:minCount 1 .

ex:topicShape
    a sh:PropertyShape ;
    sh:path [ sh:alternativePath (foaf:primaryTopic foaf:topic) ] ;
    sh:nodeKind sh:IRI ;
    sh:minCount 1 .

ex:triplesShape
    a sh:PropertyShape ;
    sh:path void:triples ;
    sh:datatype xsd:integer .

ex:uriLookupEndpointShape
    a sh:PropertyShape ;
    sh:path void:uriLookupEndpoint ;
    sh:nodeKind sh:IRI .

ex:uriRegexPatternShape
    a sh:PropertyShape ;
    sh:path void:uriRegexPattern ;
    sh:nodeKind sh:Literal .

ex:uriSpaceShape
    a sh:PropertyShape ;
    sh:path void:uriSpace ;
    sh:nodeKind sh:Literal .

ex:vocabularyShape
    a sh:PropertyShape ;
    sh:path void:vocabulary ;
    sh:nodeKind sh:IRI .

ex:waiverShape
    a sh:PropertyShape ;
    sh:path wv:waiver ;
    sh:nodeKind sh:IRIOrLiteral .
